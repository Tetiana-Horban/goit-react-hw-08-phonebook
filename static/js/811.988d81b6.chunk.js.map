{"version":3,"file":"static/js/811.988d81b6.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactListItem/ContactListItem.jsx","redux/filter/filter-selectors.js","components/ContactList/ContactList.jsx","views/ContactsPage/ContactsPage.js"],"sourcesContent":["import { useState } from 'react';\nimport Notiflix from 'notiflix';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport {\n  Container,\n  CssBaseline,\n  Box,\n  Typography,\n  Grid,\n  TextField,\n  Button,\n} from '@mui/material';\nimport {\n  useFetchContactsQuery,\n  useCreateContactMutation,\n} from 'redux/contacts/contactsApi';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const { data: contacts } = useFetchContactsQuery();\n  const [addContact] = useCreateContactMutation();\n\n  const theme = createTheme();\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      Notiflix.Notify.warning(`${name} is already in contacts`);\n    } else {\n      addContact({ name, number });\n    }\n    resetForm();\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Typography component=\"h1\" variant=\"h5\">\n            Create new contact\n          </Typography>\n          <Box\n            component=\"form\"\n            noValidate\n            onSubmit={handleSubmit}\n            sx={{ mt: 3 }}\n          >\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  inputProps={{\n                    pattern:\n                      \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n                  }}\n                  fullWidth\n                  required\n                  label=\"Name\"\n                  name=\"name\"\n                  type=\"text\"\n                  value={name}\n                  onChange={handleChange}\n                  title={\n                    \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                  }\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  inputProps={{\n                    pattern:\n                      '+?d{1,4}?[-.s]?(?d{1,3}?)?[-.s]?d{1,4}[-.s]?d{1,4}[-.s]?d{1,9}',\n                  }}\n                  fullWidth\n                  label=\"Number\"\n                  type=\"tel\"\n                  value={number}\n                  onChange={handleChange}\n                  name=\"number\"\n                  title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                  required\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Add contact\n            </Button>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n};\nexport default ContactForm;\n","import { useDispatch } from 'react-redux';\nimport { changeFilter } from 'redux/filter/filter-action';\nimport { Container, CssBaseline, Box, Grid, TextField } from '@mui/material';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const onChange = event => dispatch(changeFilter(event.target.value));\n  const theme = createTheme();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 1,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <TextField\n            margin=\"normal\"\n            fullWidth\n            label=\"Find contacts by name\"\n            type=\"text\"\n            onChange={onChange}\n          />\n          <Grid container></Grid>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default Filter;\n","import PropTypes from 'prop-types';\nimport { useDeleteContactMutation } from 'redux/contacts/contactsApi';\nimport {\n  Avatar,\n  IconButton,\n  ListItemText,\n  ListItemAvatar,\n  ListItem,\n} from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nconst ContactListItem = ({ id, name, number }) => {\n  const [deleteContact] = useDeleteContactMutation();\n\n  return (\n    <ListItem sx={{ display: 'flex', justifyContent: 'space-between' }}>\n      <ListItemAvatar>\n        <Avatar sx={{ bgcolor: 'secondary.main' }}></Avatar>\n      </ListItemAvatar>\n      <ListItemText>\n        Name: {name} <br />\n        Phone: {number}\n      </ListItemText>\n      <IconButton aria-label=\"delete\" onClick={() => deleteContact(id)}>\n        <DeleteIcon />\n      </IconButton>\n    </ListItem>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\nexport default ContactListItem;\n","export const getFilter = state => state.filter;\n","import ContactListItem from '../ContactListItem/ContactListItem';\nimport { useSelector } from 'react-redux';\nimport { useFetchContactsQuery } from 'redux/contacts/contactsApi';\nimport { getFilter } from 'redux/filter/filter-selectors';\nimport Box from '@mui/material/Box';\nimport List from '@mui/material/List';\nimport Container from '@mui/material/Container';\nimport Grid from '@mui/material/Grid';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport * as React from 'react';\n\nconst ContactsList = () => {\n  const { data: contacts, isFetching, isError } = useFetchContactsQuery();\n  const filter = useSelector(getFilter);\n  const theme = createTheme();\n\n  const getRenderContacts = () => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 1,\n            display: 'flex',\n            flexDirection: 'column',\n          }}\n        >\n          <Grid item xs={12} md={6}>\n            {!isFetching &&\n              !isError &&\n              getRenderContacts().map(({ id, name, number }) => (\n                <List key={id}>\n                  <ContactListItem id={id} name={name} number={number} />\n                </List>\n              ))}\n          </Grid>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default ContactsList;\n","import { Title } from 'App.styled';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactsList from 'components/ContactList/ContactList';\n\nconst ContactsPage = () => {\n  return (\n    <>\n      <ContactForm />\n      <Title>Contacts</Title>\n      <Filter />\n      <ContactsList />\n    </>\n  );\n};\nexport default ContactsPage;\n"],"names":["useState","name","setName","number","setNumber","contacts","useFetchContactsQuery","data","useCreateContactMutation","addContact","theme","createTheme","handleChange","event","target","value","ThemeProvider","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Typography","variant","noValidate","onSubmit","preventDefault","find","contact","toLowerCase","Notiflix","mt","Grid","container","spacing","item","xs","TextField","inputProps","pattern","fullWidth","required","label","type","onChange","title","Button","mb","dispatch","useDispatch","margin","changeFilter","id","useDeleteContactMutation","deleteContact","ListItem","justifyContent","ListItemAvatar","Avatar","bgcolor","ListItemText","IconButton","onClick","Delete","getFilter","state","filter","isFetching","isError","useSelector","md","includes","map","List"],"sourceRoot":""}